strict graph "Program Dependency Graph for 'main' function" {
label="Program Dependency Graph for 'main' function";
Node0x55d4d9cb30f0 [fillcolor=purple, label="{  %38 = bitcast %struct._okay_datatype* %6 to i8*, !dbg !137, DBGLOC file ./partitioned/multithreaded/purple/purple_rpc.c line 181 col 32 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x55d4d9cb2ca0 [fillcolor=purple, label="{  %4 = alloca %struct._tag, align 1, DBGLOC  ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x55d4d9cb4150 [fillcolor=purple, label="{\<\<ENTRY\>\> _notify_next_tag \<\<0x55d4d9c4d3d0\> = distinct !DISubprogram(name: \"_notify_next_tag\", scope: \<0x55d4d9c4db60\>, file: \<0x55d4d9c4db60\>, line: 118, type: \<0x55d4d9c4f4c0\>, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: \<0x55d4d9c4d4e8\>, retainedNodes: \<0x55d4d9c4d2e0\>)\>}", shape="record", side="purple/purple", style=filled];
Node0x55d4d9ce6eb0 [dbginfo="Name: xdc_asyn_send on line 343 column 5 in file ./partitioned/multithreaded/purple/purple_rpc.c (local)", fillcolor="gray", label="{  call void @xdc_asyn_send(i8* %40, i8* %41, %struct._tag* %6), !dbg !139, DBGLOC file ./partitioned/multithreaded/purple/purple_rpc.c line 343 col 5 ENDDBGLOC}", shape="record", side="purple/purple", style="filled"];
Node0x55bca91cddc0 [dbginfo="Name: xdc_blocking_recv on line 174 column 5 in file ./partitioned/multithreaded/orange/orange_rpc.c (local)", fillcolor="gray", label="{  call void @xdc_blocking_recv(i8* %23, i8* %24, %struct._tag* %3), !dbg !116, DBGLOC file ./partitioned/multithreaded/orange/orange_rpc.c line 174 col 5 ENDDBGLOC}", shape="record", side="orange/orange", style="filled"];
Node0x55d4d9ce9ca0 [fillcolor=purple, label="{  %40 = load i8*, i8** @_rpc_get_a.psocket, align 8, !dbg !137, DBGLOC file ./partitioned/multithreaded/purple/purple_rpc.c line 343 col 19 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x55bca91fa6b0 [dbginfo="Name: xdc_blocking_recv on line 248 column 5 in file ./partitioned/multithreaded/orange/orange_rpc.c (local)", fillcolor="gray", label="{  call void @xdc_blocking_recv(i8* %25, i8* %26, %struct._tag* %3), !dbg !116, DBGLOC file ./partitioned/multithreaded/orange/orange_rpc.c line 248 col 5 ENDDBGLOC}", shape="record", side="orange/orange", style="filled"];
Node0x55bca91facd0 [fillcolor=orange, label="{  %3 = alloca %struct._tag, align 1, DBGLOC  ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x55d4d9cb2d60 [dbginfo="Name: xdc_blocking_recv on line 181 column 5 in file ./partitioned/multithreaded/purple/purple_rpc.c (local)", fillcolor="gray", label="{  call void @xdc_blocking_recv(i8* %37, i8* %38, %struct._tag* %4), !dbg !138, DBGLOC file ./partitioned/multithreaded/purple/purple_rpc.c line 181 col 5 ENDDBGLOC}", shape="record", side="purple/purple", style="filled"];
Node0x55d4d9cb2cd0 [dbginfo="Name: xdc_asyn_send on line 180 column 5 in file ./partitioned/multithreaded/purple/purple_rpc.c (local)", fillcolor="gray", label="{  call void @xdc_asyn_send(i8* %35, i8* %36, %struct._tag* %3), !dbg !135, DBGLOC file ./partitioned/multithreaded/purple/purple_rpc.c line 180 col 5 ENDDBGLOC}", shape="record", side="purple/purple", style="filled"];
Node0x55d4d9cb2c10 [fillcolor=purple, label="{  %3 = alloca %struct._tag, align 1, DBGLOC  ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x55d4d9ce8e80 [fillcolor=purple, label="{  %41 = bitcast %struct._okay_datatype* %8 to i8*, !dbg !138, DBGLOC file ./partitioned/multithreaded/purple/purple_rpc.c line 343 col 28 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x55d4d9ceb960 [fillcolor=purple, label="{\<\<ENTRY\>\> _rpc_get_a \<\<0x55d4d9c4d2a0\> = distinct !DISubprogram(name: \"_rpc_get_a\", scope: \<0x55d4d9c4db60\>, file: \<0x55d4d9c4db60\>, line: 270, type: \<0x55d4d9c4f060\>, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: \<0x55d4d9c4d4e8\>, retainedNodes: \<0x55d4d9c4d2e0\>)\>}", shape="record", side="purple/purple", style=filled];
Node0x55bca91ce0c0 [fillcolor=orange, label="{  %27 = bitcast %struct._okay_datatype* %6 to i8*, !dbg !121, DBGLOC file ./partitioned/multithreaded/orange/orange_rpc.c line 177 col 28 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x55bca91ffc50 [fillcolor=orange, label="{\<\<ENTRY\>\> _handle_request_get_a \<\<0x55bca9182590\> = distinct !DISubprogram(name: \"_handle_request_get_a\", scope: \<0x55bca9183fc0\>, file: \<0x55bca9183fc0\>, line: 184, type: \<0x55bca91841b0\>, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: \<0x55bca9182d18\>, retainedNodes: \<0x55bca91825d0\>)\>}", shape="record", side="orange/orange", style=filled];
Node0x55d4d9cb3000 [fillcolor=purple, label="{  %36 = bitcast %struct._nextrpc_datatype* %5 to i8*, !dbg !134, DBGLOC file ./partitioned/multithreaded/purple/purple_rpc.c line 180 col 28 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x55d4d9cb38c0 [fillcolor=purple, label="{  %37 = load i8*, i8** @_notify_next_tag.ssocket, align 8, !dbg !136, DBGLOC file ./partitioned/multithreaded/purple/purple_rpc.c line 181 col 23 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x55bca91cf490 [fillcolor=orange, label="{\<\<ENTRY\>\> _handle_nextrpc \<\<0x55bca9182b40\> = distinct !DISubprogram(name: \"_handle_nextrpc\", scope: \<0x55bca9183fc0\>, file: \<0x55bca9183fc0\>, line: 118, type: \<0x55bca91841b0\>, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: \<0x55bca9182d18\>, retainedNodes: \<0x55bca91825d0\>)\>}", shape="record", side="orange/orange", style=filled];
Node0x55bca91cde20 [fillcolor=orange, label="{  %4 = alloca %struct._tag, align 1, DBGLOC  ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x55bca91d9960 [fillcolor=orange, label="{  %26 = bitcast %struct._okay_datatype* %5 to i8*, !dbg !115, DBGLOC file ./partitioned/multithreaded/orange/orange_rpc.c line 248 col 32 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x55d4d9ce6df0 [fillcolor=purple, label="{  %6 = alloca %struct._tag, align 1, DBGLOC  ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x55bca91cdd30 [fillcolor=orange, label="{  %3 = alloca %struct._tag, align 1, DBGLOC  ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x55bca91ce7c0 [fillcolor=orange, label="{  %23 = load i8*, i8** @_handle_nextrpc.ssocket, align 8, !dbg !114, DBGLOC file ./partitioned/multithreaded/orange/orange_rpc.c line 174 col 23 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x55d4d9cb3890 [fillcolor=purple, label="{  %35 = load i8*, i8** @_notify_next_tag.psocket, align 8, !dbg !133, DBGLOC file ./partitioned/multithreaded/purple/purple_rpc.c line 180 col 19 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x55bca91ce820 [fillcolor=orange, label="{  %26 = load i8*, i8** @_handle_nextrpc.psocket, align 8, !dbg !120, DBGLOC file ./partitioned/multithreaded/orange/orange_rpc.c line 177 col 19 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x55bca91cdee0 [dbginfo="Name: xdc_asyn_send on line 177 column 5 in file ./partitioned/multithreaded/orange/orange_rpc.c (local)", fillcolor="gray", label="{  call void @xdc_asyn_send(i8* %26, i8* %27, %struct._tag* %4), !dbg !122, DBGLOC file ./partitioned/multithreaded/orange/orange_rpc.c line 177 col 5 ENDDBGLOC}", shape="record", side="orange/orange", style="filled"];
Node0x55bca91cdfa0 [fillcolor=orange, label="{  %24 = bitcast %struct._nextrpc_datatype* %5 to i8*, !dbg !115, DBGLOC file ./partitioned/multithreaded/orange/orange_rpc.c line 174 col 32 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x55bca91da130 [fillcolor=orange, label="{  %25 = load i8*, i8** @_handle_request_get_a.ssocket, align 8, !dbg !114, DBGLOC file ./partitioned/multithreaded/orange/orange_rpc.c line 248 col 23 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
N [pos="0,25!", shape=polygon, side=green, style=invis];
S [pos="0,-25!", shape=polygon, side=orange, style=invis];
Node0x55d4d9cb30f0 -- Node0x55d4d9cb2d60  [label="{DEF_USE}", style="dotted"];
Node0x55d4d9cb30f0 -- Node0x55d4d9cb4150  [label="{CONTROL}"];
Node0x55d4d9cb30f0 -- N  [style=invis];
Node0x55d4d9cb2ca0 -- Node0x55d4d9cb2d60  [label="{DEF_USE}", style="dotted"];
Node0x55d4d9cb2ca0 -- Node0x55d4d9cb4150  [label="{CONTROL}"];
Node0x55d4d9cb2ca0 -- N  [style=invis];
Node0x55d4d9cb4150 -- Node0x55d4d9cb2c10  [label="{CONTROL}"];
Node0x55d4d9cb4150 -- Node0x55d4d9cb3890  [label="{CONTROL}"];
Node0x55d4d9cb4150 -- Node0x55d4d9cb3000  [label="{CONTROL}"];
Node0x55d4d9cb4150 -- Node0x55d4d9cb2cd0  [label="{CONTROL}"];
Node0x55d4d9cb4150 -- Node0x55d4d9cb38c0  [label="{CONTROL}"];
Node0x55d4d9cb4150 -- Node0x55d4d9cb2d60  [label="{CONTROL}"];
Node0x55d4d9cb4150 -- N  [style=invis];
Node0x55d4d9ce6eb0 -- Node0x55bca91fa6b0  [label="{CROSSDOMAIN}"];
Node0x55d4d9ce6eb0 -- Node0x55d4d9ce6df0  [label="{DEF_USE}", style="dotted"];
Node0x55d4d9ce6eb0 -- Node0x55d4d9ce8e80  [label="{DEF_USE}", style="dotted"];
Node0x55d4d9ce6eb0 -- Node0x55d4d9ce9ca0  [label="{DEF_USE}", style="dotted"];
Node0x55d4d9ce6eb0 -- Node0x55d4d9ceb960  [label="{CONTROL}"];
Node0x55bca91cddc0 -- Node0x55bca91cdd30  [label="{DEF_USE}", style="dotted"];
Node0x55bca91cddc0 -- Node0x55d4d9cb2cd0  [label="{CROSSDOMAIN}"];
Node0x55bca91cddc0 -- Node0x55bca91cdfa0  [label="{DEF_USE}", style="dotted"];
Node0x55bca91cddc0 -- Node0x55bca91ce7c0  [label="{DEF_USE}", style="dotted"];
Node0x55bca91cddc0 -- Node0x55bca91cf490  [label="{CONTROL}"];
Node0x55d4d9ce9ca0 -- Node0x55d4d9ceb960  [label="{CONTROL}"];
Node0x55d4d9ce9ca0 -- N  [style=invis];
Node0x55bca91fa6b0 -- Node0x55bca91facd0  [label="{DEF_USE}", style="dotted"];
Node0x55bca91fa6b0 -- Node0x55bca91d9960  [label="{DEF_USE}", style="dotted"];
Node0x55bca91fa6b0 -- Node0x55bca91da130  [label="{DEF_USE}", style="dotted"];
Node0x55bca91fa6b0 -- Node0x55bca91ffc50  [label="{CONTROL}"];
Node0x55bca91facd0 -- Node0x55bca91ffc50  [label="{CONTROL}"];
Node0x55bca91facd0 -- S  [style=invis];
Node0x55d4d9cb2d60 -- Node0x55bca91cdee0  [label="{CROSSDOMAIN}"];
Node0x55d4d9cb2d60 -- Node0x55d4d9cb38c0  [label="{DEF_USE}", style="dotted"];
Node0x55d4d9cb2cd0 -- Node0x55d4d9cb2c10  [label="{DEF_USE}", style="dotted"];
Node0x55d4d9cb2cd0 -- Node0x55d4d9cb3000  [label="{DEF_USE}", style="dotted"];
Node0x55d4d9cb2cd0 -- Node0x55d4d9cb3890  [label="{DEF_USE}", style="dotted"];
Node0x55d4d9cb2c10 -- N  [style=invis];
Node0x55d4d9ce8e80 -- Node0x55d4d9ceb960  [label="{CONTROL}"];
Node0x55d4d9ce8e80 -- N  [style=invis];
Node0x55d4d9ceb960 -- Node0x55d4d9ce6df0  [label="{CONTROL}"];
Node0x55d4d9ceb960 -- N  [style=invis];
Node0x55bca91ce0c0 -- Node0x55bca91cdee0  [label="{DEF_USE}", style="dotted"];
Node0x55bca91ce0c0 -- Node0x55bca91cf490  [label="{CONTROL}"];
Node0x55bca91ce0c0 -- S  [style=invis];
Node0x55bca91ffc50 -- Node0x55bca91da130  [label="{CONTROL}"];
Node0x55bca91ffc50 -- Node0x55bca91d9960  [label="{CONTROL}"];
Node0x55bca91ffc50 -- S  [style=invis];
Node0x55d4d9cb3000 -- N  [style=invis];
Node0x55d4d9cb38c0 -- N  [style=invis];
Node0x55bca91cf490 -- Node0x55bca91cdd30  [label="{CONTROL}"];
Node0x55bca91cf490 -- Node0x55bca91cde20  [label="{CONTROL}"];
Node0x55bca91cf490 -- Node0x55bca91ce7c0  [label="{CONTROL}"];
Node0x55bca91cf490 -- Node0x55bca91cdfa0  [label="{CONTROL}"];
Node0x55bca91cf490 -- Node0x55bca91ce820  [label="{CONTROL}"];
Node0x55bca91cf490 -- Node0x55bca91cdee0  [label="{CONTROL}"];
Node0x55bca91cf490 -- S  [style=invis];
Node0x55bca91cde20 -- Node0x55bca91cdee0  [label="{DEF_USE}", style="dotted"];
Node0x55bca91cde20 -- S  [style=invis];
Node0x55bca91d9960 -- S  [style=invis];
Node0x55d4d9ce6df0 -- N  [style=invis];
Node0x55bca91cdd30 -- S  [style=invis];
Node0x55bca91ce7c0 -- S  [style=invis];
Node0x55d4d9cb3890 -- N  [style=invis];
Node0x55bca91ce820 -- Node0x55bca91cdee0  [label="{DEF_USE}", style="dotted"];
Node0x55bca91ce820 -- S  [style=invis];
Node0x55bca91cdfa0 -- S  [style=invis];
Node0x55bca91da130 -- S  [style=invis];
}
