strict graph "Program Dependency Graph for 'main' function" {
label="Program Dependency Graph for 'main' function";
Node0x557676ba1da0 [fillcolor=orange, label="{  store i32 1, i32* @_handle_request_get_a.inited, align 4, !dbg !92, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 24 col 10 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676ba2430 [fillcolor=orange, label="{  %13 = call i8* @xdc_pub_socket(), !dbg !94, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 25 col 13 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676ba2460 [fillcolor=orange, label="{  %20 = call i8* @xdc_sub_socket(i64 %17, i32 %19), !dbg !96, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 26 col 13 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x555b80a8fc80 [fillcolor=purple, label="{  call void @llvm.dbg.declare(metadata %struct._response_get_a_datatype* %4, metadata !73, metadata !DIExpression()), !dbg !79, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 15 col 26 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x555b80a8fc50 [annotation="TAG_RESPONSE_GET_A", dbginfo="Name: 4 on line 15 column 2 in file partitioned/multithreaded/purple/example1_rpc.mod.c (local)", fillcolor=purple, label="{  %4 = alloca %struct._response_get_a_datatype, align 1, DBGLOC  ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x557676ba3490 [color="blue", fillcolor=orange, label="{FORMAL_OUT: 0 %struct._tag*}", shape="record", side="orange/orange", style=filled];
Node0x555b80a8fb90 [fillcolor=purple, label="{  %8 = getelementptr inbounds %struct._request_get_a_datatype, %struct._request_get_a_datatype* %3, i32 0, i32 0, !dbg !81, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 19 col 12 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x557676ba1b00 [fillcolor=orange, label="{  %24 = bitcast %struct._request_get_a_datatype* %5 to i8*, !dbg !101, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 30 col 29 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676bc18b0 [fillcolor=orange, label="{  call void @_handle_request_get_a(%struct._tag* %5), !dbg !56, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 84 col 1 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x555b80a91210 [fillcolor=purple, label="{GLOBAL_VALUE:@_rpc_get_a.ssocket = internal global i8* null, align 8, !dbg !16, DBGLOC  ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x557676ba1d40 [fillcolor=orange, label="{  %18 = getelementptr inbounds \{ i64, i32 \}, \{ i64, i32 \}* %7, i32 0, i32 1, !dbg !96, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 26 col 13 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676bbe5a0 [fillcolor=orange, label="{GLOBAL_VALUE:@_handle_request_get_a.ssocket = internal global i8* null, align 8, !dbg !28, DBGLOC  ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676ba1a70 [fillcolor=orange, label="{  call void @llvm.dbg.declare(metadata %struct._request_get_a_datatype* %5, metadata !57, metadata !DIExpression()), !dbg !78, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 13 col 25 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x555b80a90070 [fillcolor=purple, label="{  br i1 %10, label %21, label %11, !dbg !87, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 23 col 5 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x557676ba1c50 [fillcolor=orange, label="{  %26 = getelementptr inbounds %struct._response_get_a_datatype, %struct._response_get_a_datatype* %6, i32 0, i32 0, !dbg !104, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 31 col 12 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676b9ce00 [fillcolor=orange, label="{  %3 = alloca %struct._tag, align 4, DBGLOC  ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676ba1c80 [fillcolor=orange, label="{  %7 = alloca \{ i64, i32 \}, align 4, DBGLOC  ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x555b80a8fb30 [fillcolor=purple, label="{  %6 = bitcast %struct._request_get_a_datatype* %3 to i8*, !dbg !72, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 10 col 2 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x557676ba33d0 [color="blue", fillcolor=orange, label="{FORMAL_IN: 0 %struct._tag*}", shape="record", side="orange/orange", style=filled];
Node0x557676ba2370 [fillcolor=orange, label="{  %27 = load i8*, i8** @_handle_request_get_a.psocket, align 8, !dbg !107, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 34 col 16 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x555b80a8ffb0 [fillcolor=purple, label="{  store i8* %19, i8** @_rpc_get_a.ssocket, align 8, !dbg !93, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 26 col 11 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x555b80a8aa30 [fillcolor=purple, label="{GLOBAL_VALUE:@_rpc_get_a.psocket = internal global i8* null, align 8, !dbg !13, DBGLOC  ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x555b80a90590 [fillcolor=purple, label="{  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 4 %14, i64 12, i1 false), !dbg !92, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 26 col 13 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x557676bbe620 [fillcolor=orange, label="{GLOBAL_VALUE:@_handle_request_get_a.psocket = internal global i8* null, align 8, !dbg !25, DBGLOC  ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676ba1a10 [annotation="TAG_REQUEST_GET_A", dbginfo="Name: 5 on line 13 column 2 in file partitioned/multithreaded/orange/example1_rpc.mod.c (local)", fillcolor=orange, label="{  %5 = alloca %struct._request_get_a_datatype, align 1, DBGLOC  ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676ba2520 [fillcolor=orange, label="{  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 12, i1 false), !dbg !96, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 26 col 13 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676ba1d70 [fillcolor=orange, label="{  %11 = icmp ne i32 %10, 0, !dbg !89, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 23 col 6 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676ba1e90 [fillcolor=orange, label="{  store i8* %13, i8** @_handle_request_get_a.psocket, align 8, !dbg !95, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 25 col 11 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x555b80a8fce0 [fillcolor=purple, label="{  %26 = getelementptr inbounds %struct._response_get_a_datatype, %struct._response_get_a_datatype* %4, i32 0, i32 0, !dbg !102, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 32 col 20 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x557676ba18f0 [fillcolor=orange, label="{  %4 = alloca %struct._tag, align 4, DBGLOC  ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676ba2310 [fillcolor=orange, label="{  %23 = load i8*, i8** @_handle_request_get_a.ssocket, align 8, !dbg !100, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 30 col 20 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x555b80a8fe30 [fillcolor=purple, label="{  call void @llvm.var.annotation(i8* %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i32 0, i32 0), i32 10), !dbg !72, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 10 col 2 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x555b80a8f980 [fillcolor=purple, label="{  %14 = bitcast %struct._tag* %2 to i8*, !dbg !92, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 26 col 13 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x555b80a8fb00 [fillcolor=purple, label="{  call void @llvm.dbg.declare(metadata %struct._request_get_a_datatype* %3, metadata !50, metadata !DIExpression()), !dbg !71, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 10 col 25 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x557676b9d1c0 [fillcolor=orange, label="{  %2 = alloca %struct._tag*, align 8, DBGLOC  ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676ba1cb0 [fillcolor=orange, label="{  %14 = bitcast \{ i64, i32 \}* %7 to i8*, !dbg !96, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 26 col 13 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676ba2c30 [fillcolor=orange, label="{  ret void, !dbg !110, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 35 col 1 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676ba1800 [dbginfo="Name: xdc_blocking_recv on line 30 column 2 in file partitioned/multithreaded/orange/example1_rpc.mod.c (local)", fillcolor="gray", label="{  call void @xdc_blocking_recv(i8* %23, i8* %24, %struct._tag* %3), !dbg !102, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 30 col 2 ENDDBGLOC}", shape="record", side="orange/orange", style="filled"];
Node0x557676babec0 [fillcolor=orange, label="{  call void @llvm.dbg.declare(metadata %struct._tag** %2, metadata !51, metadata !DIExpression()), !dbg !52, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 5 col 38 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x555b80a8fd70 [fillcolor=purple, label="{  %13 = bitcast \{ i64, i32 \}* %5 to i8*, !dbg !92, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 26 col 13 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x555b80a90500 [fillcolor=purple, label="{  %27 = load double, double* %26, align 1, !dbg !102, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 32 col 20 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x555b80a8ff80 [fillcolor=purple, label="{  store i8* %12, i8** @_rpc_get_a.psocket, align 8, !dbg !91, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 25 col 11 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x557676ba1d10 [fillcolor=orange, label="{  %10 = load i32, i32* @_handle_request_get_a.inited, align 4, !dbg !89, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 23 col 6 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x555b80a90530 [fillcolor=purple, label="{  %12 = call i8* @xdc_pub_socket(), !dbg !90, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 25 col 13 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x555b80a8f860 [fillcolor=purple, label="{  call void @tag_write(%struct._tag* %1, i32 1, i32 1, i32 3), !dbg !83, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 20 col 2 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x555b80a8f950 [dbginfo="Name: xdc_blocking_recv on line 31 column 2 in file partitioned/multithreaded/purple/example1_rpc.mod.c (local)", fillcolor="gray", label="{  call void @xdc_blocking_recv(i8* %24, i8* %25, %struct._tag* %2), !dbg !101, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 31 col 2 ENDDBGLOC}", shape="record", side="purple/purple", style="filled"];
Node0x555b80a8f920 [fillcolor=purple, label="{  call void @tag_write(%struct._tag* %2, i32 2, i32 2, i32 4), !dbg !84, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 21 col 2 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x555b80a8f8c0 [fillcolor=purple, label="{  %2 = alloca %struct._tag, align 4, DBGLOC  ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x557676ba17d0 [fillcolor=orange, label="{  call void @llvm.dbg.declare(metadata %struct._tag* %3, metadata !53, metadata !DIExpression()), !dbg !54, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 9 col 11 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676ba1ce0 [fillcolor=orange, label="{  %16 = getelementptr inbounds \{ i64, i32 \}, \{ i64, i32 \}* %7, i32 0, i32 0, !dbg !96, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 26 col 13 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x555b80a8fe90 [fillcolor=purple, label="{  call void @llvm.var.annotation(i8* %7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i32 0, i32 0), i32 15), !dbg !80, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 15 col 2 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x557676ba19b0 [fillcolor=orange, label="{  call void @llvm.dbg.declare(metadata %struct._tag* %4, metadata !55, metadata !DIExpression()), !dbg !56, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 10 col 11 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676ba2850 [fillcolor=orange, label="{  br label %22, !dbg !99, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 28 col 2 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x555b80a8c140 [fillcolor=purple, label="{  ret double %27, !dbg !103, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 32 col 2 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x557676ba1bc0 [fillcolor=orange, label="{  call void @llvm.dbg.declare(metadata %struct._response_get_a_datatype* %6, metadata !80, metadata !DIExpression()), !dbg !86, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 18 col 26 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676ba1bf0 [fillcolor=orange, label="{  %9 = bitcast %struct._response_get_a_datatype* %6 to i8*, !dbg !87, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 18 col 2 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676ba1a40 [dbginfo="Name: xdc_asyn_send on line 34 column 2 in file partitioned/multithreaded/orange/example1_rpc.mod.c (local)", fillcolor="gray", label="{  call void @xdc_asyn_send(i8* %27, i8* %28, %struct._tag* %4), !dbg !109, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 34 col 2 ENDDBGLOC}", shape="record", side="orange/orange", style="filled"];
Node0x555b80a8bf00 [fillcolor=purple, label="{  %20 = call i32 @sleep(i32 1), !dbg !94, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 27 col 3 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x557676ba1830 [fillcolor=orange, label="{  %15 = bitcast %struct._tag* %3 to i8*, !dbg !96, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 26 col 13 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x555b80a898b0 [fillcolor=purple, label="{  %10 = call double (...) bitcast (double ()* @_rpc_get_a to double (...)*)(), !dbg !52, DBGLOC file partitioned/multithreaded/purple/example1.mod.c line 58 col 9 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x555b80a8f890 [fillcolor=purple, label="{  call void @llvm.dbg.declare(metadata %struct._tag* %2, metadata !48, metadata !DIExpression()), !dbg !49, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 7 col 11 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x555b80a903e0 [fillcolor=purple, label="{  %22 = load i8*, i8** @_rpc_get_a.psocket, align 8, !dbg !96, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 30 col 16 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x555b80a8fef0 [fillcolor=purple, label="{  %9 = load i32, i32* @_rpc_get_a.inited, align 4, !dbg !85, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 23 col 6 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x557676ba21c0 [fillcolor=orange, label="{  br i1 %11, label %22, label %12, !dbg !91, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 23 col 5 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676babef0 [fillcolor=orange, label="{  call void @tag_write(%struct._tag* %3, i32 1, i32 1, i32 3), !dbg !88, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 22 col 2 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x555b80a819c0 [fillcolor=purple, label="{  call void @llvm.dbg.declare(metadata %struct._tag* %1, metadata !34, metadata !DIExpression()), !dbg !47, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 6 col 11 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x555b80a8fd40 [fillcolor=purple, label="{  %5 = alloca \{ i64, i32 \}, align 4, DBGLOC  ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x555b80a90560 [fillcolor=purple, label="{  %19 = call i8* @xdc_sub_socket(i64 %16, i32 %18), !dbg !92, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 26 col 13 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x555b80a8f8f0 [dbginfo="Name: xdc_asyn_send on line 30 column 2 in file partitioned/multithreaded/purple/example1_rpc.mod.c (local)", fillcolor="gray", label="{  call void @xdc_asyn_send(i8* %22, i8* %23, %struct._tag* %1), !dbg !98, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 30 col 2 ENDDBGLOC}", shape="record", side="purple/purple", style="filled"];
Node0x555b80a8fda0 [fillcolor=purple, label="{  %15 = getelementptr inbounds \{ i64, i32 \}, \{ i64, i32 \}* %5, i32 0, i32 0, !dbg !92, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 26 col 13 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x557676babe90 [fillcolor=orange, label="{  store %struct._tag* %0, %struct._tag** %2, align 8, DBGLOC  ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x555b80a8fdd0 [fillcolor=purple, label="{  store i32 0, i32* %8, align 1, !dbg !82, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 19 col 18 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x557676ba22e0 [fillcolor=orange, label="{  %17 = load i64, i64* %16, align 4, !dbg !96, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 26 col 13 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x555b80a8fd10 [fillcolor=purple, label="{  %25 = bitcast %struct._response_get_a_datatype* %4 to i8*, !dbg !100, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 31 col 29 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x557676ba26d0 [fillcolor=orange, label="{  %25 = call double (...) bitcast (double ()* @get_a to double (...)*)(), !dbg !103, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 31 col 18 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x555b80a9d240 [fillcolor=purple, label="{GLOBAL_VALUE:@_rpc_get_a.inited = internal global i32 0, align 4, !dbg !0, DBGLOC  ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x555b80a8ff50 [fillcolor=purple, label="{  store i32 1, i32* @_rpc_get_a.inited, align 4, !dbg !88, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 24 col 10 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x557676ba1aa0 [fillcolor=orange, label="{  %8 = bitcast %struct._request_get_a_datatype* %5 to i8*, !dbg !79, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 13 col 2 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676ba1ec0 [fillcolor=orange, label="{  store i8* %20, i8** @_handle_request_get_a.ssocket, align 8, !dbg !97, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 26 col 11 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676ba1e30 [fillcolor=orange, label="{  call void @llvm.var.annotation(i8* %9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i32 0, i32 0), i32 18), !dbg !87, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 18 col 2 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676ba1ad0 [annotation="TAG_RESPONSE_GET_A", dbginfo="Name: 6 on line 18 column 2 in file partitioned/multithreaded/orange/example1_rpc.mod.c (local)", fillcolor=orange, label="{  %6 = alloca %struct._response_get_a_datatype, align 1, DBGLOC  ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676ba1dd0 [fillcolor=orange, label="{  call void @llvm.var.annotation(i8* %8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i32 0, i32 0), i32 13), !dbg !79, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 13 col 2 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x555b80a8c170 [fillcolor=purple, label="{\<\<ENTRY\>\> _rpc_get_a \<\<0x555b80a50af0\> = distinct !DISubprogram(name: \"_rpc_get_a\", scope: \<0x555b80a45ca0\>, file: \<0x555b80a45ca0\>, line: 2, type: \<0x555b80a520a0\>, scopeLine: 2, spFlags: DISPFlagDefinition, unit: \<0x555b80a50b98\>, retainedNodes: \<0x555b80a50b30\>)\>}", shape="record", side="purple/purple", style=filled];
Node0x555b80a8fb60 [fillcolor=purple, label="{  %23 = bitcast %struct._request_get_a_datatype* %3 to i8*, !dbg !97, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 30 col 25 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x557676ba19e0 [fillcolor=orange, label="{  call void @tag_write(%struct._tag* %4, i32 2, i32 2, i32 4), !dbg !106, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 33 col 2 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x555b80a8ff20 [fillcolor=purple, label="{  %10 = icmp ne i32 %9, 0, !dbg !85, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 23 col 6 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x555b80a93200 [fillcolor=purple, label="{  %1 = alloca %struct._tag, align 4, DBGLOC  ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x555b80a90440 [fillcolor=purple, label="{  %24 = load i8*, i8** @_rpc_get_a.ssocket, align 8, !dbg !99, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 31 col 20 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x557676ba2340 [fillcolor=orange, label="{  %19 = load i32, i32* %18, align 4, !dbg !96, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 26 col 13 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676ba1f80 [fillcolor=orange, label="{  store double %25, double* %26, align 1, !dbg !105, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 31 col 16 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676bcb520 [fillcolor=orange, label="{GLOBAL_VALUE:@_handle_request_get_a.inited = internal global i32 0, align 4, !dbg !0, DBGLOC  ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x555b80a8fad0 [annotation="TAG_REQUEST_GET_A", dbginfo="Name: 3 on line 10 column 2 in file partitioned/multithreaded/purple/example1_rpc.mod.c (local)", fillcolor=purple, label="{  %3 = alloca %struct._request_get_a_datatype, align 1, DBGLOC  ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x555b80a8c1a0 [fillcolor=purple, label="{  br label %21, !dbg !95, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 28 col 2 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x555b80a90410 [fillcolor=purple, label="{  %18 = load i32, i32* %17, align 4, !dbg !92, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 26 col 13 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x557676ba2820 [fillcolor=orange, label="{\<\<ENTRY\>\> _handle_request_get_a \<\<0x557676b69c30\> = distinct !DISubprogram(name: \"_handle_request_get_a\", scope: \<0x557676b6a360\>, file: \<0x557676b6a360\>, line: 5, type: \<0x557676b6b3a0\>, scopeLine: 5, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: \<0x557676b69d48\>, retainedNodes: \<0x557676b62dc0\>)\>}", shape="record", side="orange/orange", style=filled];
Node0x557676ba25e0 [fillcolor=orange, label="{  %21 = call i32 @sleep(i32 1), !dbg !98, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 27 col 3 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x557676ba1c20 [fillcolor=orange, label="{  %28 = bitcast %struct._response_get_a_datatype* %6 to i8*, !dbg !108, DBGLOC file partitioned/multithreaded/orange/example1_rpc.mod.c line 34 col 25 ENDDBGLOC}", shape="record", side="orange/orange", style=filled];
Node0x555b80a8fe00 [fillcolor=purple, label="{  %17 = getelementptr inbounds \{ i64, i32 \}, \{ i64, i32 \}* %5, i32 0, i32 1, !dbg !92, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 26 col 13 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x555b80a901a0 [fillcolor=purple, label="{  %16 = load i64, i64* %15, align 4, !dbg !92, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 26 col 13 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
Node0x555b80a8fcb0 [fillcolor=purple, label="{  %7 = bitcast %struct._response_get_a_datatype* %4 to i8*, !dbg !80, DBGLOC file partitioned/multithreaded/purple/example1_rpc.mod.c line 15 col 2 ENDDBGLOC}", shape="record", side="purple/purple", style=filled];
N [pos="0,25!", shape=polygon, side=green, style=invis];
S [pos="0,-25!", shape=polygon, side=orange, style=invis];
Node0x557676ba1da0 -- Node0x557676babe90  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba1da0 -- Node0x557676ba1d10  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba1da0 -- Node0x557676ba22e0  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba1da0 -- Node0x557676ba2340  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba1da0 -- Node0x557676ba2310  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba1da0 -- Node0x557676ba2370  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba1da0 -- Node0x557676ba1e90  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba1da0 -- Node0x557676ba1ec0  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba1da0 -- Node0x557676ba1f80  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba1da0 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba1da0 -- Node0x557676bcb520  [label="{GLOBAL_DEP}", style="dotted"];
Node0x557676ba1da0 -- S  [style=invis];
Node0x557676ba2430 -- Node0x557676ba1e90  [label="{DEF_USE}", style="dotted"];
Node0x557676ba2430 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba2430 -- S  [style=invis];
Node0x557676ba2460 -- Node0x557676ba22e0  [label="{DEF_USE}", style="dotted"];
Node0x557676ba2460 -- Node0x557676ba2340  [label="{DEF_USE}", style="dotted"];
Node0x557676ba2460 -- Node0x557676ba1ec0  [label="{DEF_USE}", style="dotted"];
Node0x557676ba2460 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba2460 -- S  [style=invis];
Node0x555b80a8fc80 -- Node0x555b80a8fc50  [label="{DEF_USE}", style="dotted"];
Node0x555b80a8fc80 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8fc80 -- N  [style=invis];
Node0x555b80a8fc50 -- Node0x555b80a8fcb0  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x555b80a8fc50 -- Node0x555b80a8fd10  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x555b80a8fc50 -- Node0x555b80a8fce0  [label="{DEF_USE}", style="dotted"];
Node0x555b80a8fc50 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8fc50 -- N  [style=invis];
Node0x557676ba3490 -- Node0x557676ba2820  [color="blue", label="{PARAMETER}", style="dashed"];
Node0x557676ba3490 -- Node0x557676ba33d0  [color="blue", label="{PARAMETER}", style="dashed"];
Node0x557676ba3490 -- S  [style=invis];
Node0x555b80a8fb90 -- Node0x555b80a8fad0  [label="{DEF_USE}", style="dotted"];
Node0x555b80a8fb90 -- Node0x555b80a8fdd0  [label="{DEF_USE}", style="dotted"];
Node0x555b80a8fb90 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8fb90 -- N  [style=invis];
Node0x557676ba1b00 -- Node0x557676ba1a10  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba1b00 -- Node0x557676ba1800  [label="{DEF_USE}", style="dotted"];
Node0x557676ba1b00 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676bc18b0 -- Node0x557676ba2c30  [label="{D_general}", style="dotted"];
Node0x557676bc18b0 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676bc18b0 -- S  [style=invis];
Node0x555b80a91210 -- Node0x555b80a8c170  [label="{SCOPE}"];
Node0x555b80a91210 -- Node0x555b80a90440  [label="{GLOBAL_DEP}", style="dotted"];
Node0x555b80a91210 -- Node0x555b80a8ffb0  [label="{GLOBAL_DEP}", style="dotted"];
Node0x555b80a91210 -- N  [style=invis];
Node0x557676ba1d40 -- Node0x557676ba1c80  [label="{DEF_USE}", style="dotted"];
Node0x557676ba1d40 -- Node0x557676ba2340  [label="{DATA_READ}", style="dotted"];
Node0x557676ba1d40 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba1d40 -- S  [style=invis];
Node0x557676bbe5a0 -- Node0x557676ba2820  [label="{SCOPE}"];
Node0x557676bbe5a0 -- Node0x557676ba2310  [label="{GLOBAL_DEP}", style="dotted"];
Node0x557676bbe5a0 -- Node0x557676ba1ec0  [label="{GLOBAL_DEP}", style="dotted"];
Node0x557676bbe5a0 -- S  [style=invis];
Node0x557676ba1a70 -- Node0x557676ba1a10  [label="{DEF_USE}", style="dotted"];
Node0x557676ba1a70 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba1a70 -- S  [style=invis];
Node0x555b80a90070 -- Node0x555b80a8ff20  [label="{DEF_USE}", style="dotted"];
Node0x555b80a90070 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a90070 -- N  [style=invis];
Node0x557676ba1c50 -- Node0x557676ba1ad0  [label="{DEF_USE}", style="dotted"];
Node0x557676ba1c50 -- Node0x557676ba1f80  [label="{DEF_USE}", style="dotted"];
Node0x557676ba1c50 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba1c50 -- S  [style=invis];
Node0x557676b9ce00 -- Node0x557676ba17d0  [label="{DEF_USE}", style="dotted"];
Node0x557676b9ce00 -- Node0x557676babef0  [label="{DEF_USE}", style="dotted"];
Node0x557676b9ce00 -- Node0x557676ba1830  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676b9ce00 -- Node0x557676ba1800  [label="{DEF_USE}", style="dotted"];
Node0x557676b9ce00 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba1c80 -- Node0x557676ba1cb0  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba1c80 -- Node0x557676ba1ce0  [label="{DEF_USE}", style="dotted"];
Node0x557676ba1c80 -- Node0x557676ba22e0  [label="{D_general}", style="dotted"];
Node0x557676ba1c80 -- Node0x557676ba2340  [label="{D_general}", style="dotted"];
Node0x557676ba1c80 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba1c80 -- S  [style=invis];
Node0x555b80a8fb30 -- Node0x555b80a8fad0  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x555b80a8fb30 -- Node0x555b80a8fe30  [label="{DEF_USE}", style="dotted"];
Node0x555b80a8fb30 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8fb30 -- N  [style=invis];
Node0x557676ba33d0 -- Node0x557676ba2820  [color="blue", label="{PARAMETER}", style="dashed"];
Node0x557676ba33d0 -- Node0x557676babe90  [label="{D_general}", style="dotted"];
Node0x557676ba33d0 -- S  [style=invis];
Node0x557676ba2370 -- Node0x557676ba1e90  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba2370 -- Node0x557676ba1ec0  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba2370 -- Node0x557676babef0  [label="{D_general}", style="dotted"];
Node0x557676ba2370 -- Node0x557676ba25e0  [label="{D_general}", style="dotted"];
Node0x557676ba2370 -- Node0x557676ba1a40  [label="{DEF_USE}", style="dotted"];
Node0x557676ba2370 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba2370 -- Node0x557676bbe620  [label="{GLOBAL_DEP}", style="dotted"];
Node0x555b80a8ffb0 -- Node0x555b80a8fef0  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x555b80a8ffb0 -- Node0x555b80a8ff50  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x555b80a8ffb0 -- Node0x555b80a8ff80  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x555b80a8ffb0 -- Node0x555b80a903e0  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x555b80a8ffb0 -- Node0x555b80a90440  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x555b80a8ffb0 -- Node0x555b80a90560  [label="{DEF_USE}", style="dotted"];
Node0x555b80a8ffb0 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8ffb0 -- N  [style=invis];
Node0x555b80a8aa30 -- Node0x555b80a8c170  [label="{SCOPE}"];
Node0x555b80a8aa30 -- Node0x555b80a903e0  [label="{GLOBAL_DEP}", style="dotted"];
Node0x555b80a8aa30 -- Node0x555b80a8ff80  [label="{GLOBAL_DEP}", style="dotted"];
Node0x555b80a8aa30 -- N  [style=invis];
Node0x555b80a90590 -- Node0x555b80a8f980  [label="{DEF_USE}", style="dotted"];
Node0x555b80a90590 -- Node0x555b80a8fd70  [label="{DEF_USE}", style="dotted"];
Node0x555b80a90590 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a90590 -- N  [style=invis];
Node0x557676bbe620 -- Node0x557676ba2820  [label="{SCOPE}"];
Node0x557676bbe620 -- Node0x557676ba1e90  [label="{GLOBAL_DEP}", style="dotted"];
Node0x557676bbe620 -- S  [style=invis];
Node0x557676ba1a10 -- Node0x557676ba1aa0  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba1a10 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba1a10 -- S  [style=invis];
Node0x557676ba2520 -- Node0x557676ba1830  [label="{DEF_USE}", style="dotted"];
Node0x557676ba2520 -- Node0x557676ba1cb0  [label="{DEF_USE}", style="dotted"];
Node0x557676ba2520 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba2520 -- S  [style=invis];
Node0x557676ba1d70 -- Node0x557676ba1d10  [label="{DEF_USE}", style="dotted"];
Node0x557676ba1d70 -- Node0x557676ba21c0  [label="{DEF_USE}", style="dotted"];
Node0x557676ba1d70 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba1d70 -- S  [style=invis];
Node0x557676ba1e90 -- Node0x557676ba1d10  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba1e90 -- Node0x557676ba2310  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba1e90 -- Node0x557676ba1ec0  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba1e90 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba1e90 -- S  [style=invis];
Node0x555b80a8fce0 -- Node0x555b80a90500  [label="{DATA_READ}", style="dotted"];
Node0x555b80a8fce0 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8fce0 -- N  [style=invis];
Node0x557676ba18f0 -- Node0x557676ba19b0  [label="{DEF_USE}", style="dotted"];
Node0x557676ba18f0 -- Node0x557676ba19e0  [label="{DEF_USE}", style="dotted"];
Node0x557676ba18f0 -- Node0x557676ba1a40  [label="{DEF_USE}", style="dotted"];
Node0x557676ba18f0 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba2310 -- Node0x557676ba1ec0  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba2310 -- Node0x557676babef0  [label="{D_general}", style="dotted"];
Node0x557676ba2310 -- Node0x557676ba25e0  [label="{D_general}", style="dotted"];
Node0x557676ba2310 -- Node0x557676ba1800  [label="{DEF_USE}", style="dotted"];
Node0x557676ba2310 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x555b80a8fe30 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8fe30 -- N  [style=invis];
Node0x555b80a8f980 -- Node0x555b80a8f8c0  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x555b80a8f980 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8f980 -- N  [style=invis];
Node0x555b80a8fb00 -- Node0x555b80a8fad0  [label="{DEF_USE}", style="dotted"];
Node0x555b80a8fb00 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8fb00 -- N  [style=invis];
Node0x557676b9d1c0 -- Node0x557676babe90  [label="{DEF_USE}", style="dotted"];
Node0x557676b9d1c0 -- Node0x557676babec0  [label="{DEF_USE}", style="dotted"];
Node0x557676b9d1c0 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676b9d1c0 -- S  [style=invis];
Node0x557676ba1cb0 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba1cb0 -- S  [style=invis];
Node0x557676ba2c30 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba2c30 -- S  [style=invis];
Node0x557676ba1800 -- Node0x555b80a8f8f0  [label="{CROSSDOMAIN}"];
Node0x557676ba1800 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676babec0 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676babec0 -- S  [style=invis];
Node0x555b80a8fd70 -- Node0x555b80a8fd40  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x555b80a8fd70 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8fd70 -- N  [style=invis];
Node0x555b80a90500 -- Node0x555b80a8ff50  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x555b80a90500 -- Node0x555b80a8bf00  [label="{D_general}", style="dotted"];
Node0x555b80a90500 -- Node0x555b80a8f920  [label="{D_general}", style="dotted"];
Node0x555b80a90500 -- Node0x555b80a8c140  [label="{DEF_USE}", style="dotted"];
Node0x555b80a90500 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a90500 -- N  [style=invis];
Node0x555b80a8ff80 -- Node0x555b80a8fef0  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x555b80a8ff80 -- Node0x555b80a8ff50  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x555b80a8ff80 -- Node0x555b80a903e0  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x555b80a8ff80 -- Node0x555b80a90440  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x555b80a8ff80 -- Node0x555b80a90530  [label="{DEF_USE}", style="dotted"];
Node0x555b80a8ff80 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8ff80 -- N  [style=invis];
Node0x557676ba1d10 -- Node0x557676babe90  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba1d10 -- Node0x557676ba1ec0  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba1d10 -- Node0x557676ba1f80  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba1d10 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba1d10 -- Node0x557676bcb520  [label="{GLOBAL_DEP}", style="dotted"];
Node0x557676ba1d10 -- S  [style=invis];
Node0x555b80a90530 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a90530 -- N  [style=invis];
Node0x555b80a8f860 -- Node0x555b80a93200  [label="{DEF_USE}", style="dotted"];
Node0x555b80a8f860 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8f860 -- N  [style=invis];
Node0x555b80a8f950 -- Node0x557676ba1a40  [label="{CROSSDOMAIN}"];
Node0x555b80a8f950 -- Node0x555b80a8f8c0  [label="{DEF_USE}", style="dotted"];
Node0x555b80a8f950 -- Node0x555b80a8fd10  [label="{DEF_USE}", style="dotted"];
Node0x555b80a8f950 -- Node0x555b80a90440  [label="{DEF_USE}", style="dotted"];
Node0x555b80a8f950 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8f920 -- Node0x555b80a8f8c0  [label="{DEF_USE}", style="dotted"];
Node0x555b80a8f920 -- Node0x555b80a903e0  [label="{D_general}", style="dotted"];
Node0x555b80a8f920 -- Node0x555b80a90440  [label="{D_general}", style="dotted"];
Node0x555b80a8f920 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8f920 -- N  [style=invis];
Node0x555b80a8f8c0 -- Node0x555b80a8f890  [label="{DEF_USE}", style="dotted"];
Node0x555b80a8f8c0 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x557676ba17d0 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba17d0 -- S  [style=invis];
Node0x557676ba1ce0 -- Node0x557676ba22e0  [label="{DATA_READ}", style="dotted"];
Node0x557676ba1ce0 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba1ce0 -- S  [style=invis];
Node0x555b80a8fe90 -- Node0x555b80a8fcb0  [label="{DEF_USE}", style="dotted"];
Node0x555b80a8fe90 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8fe90 -- N  [style=invis];
Node0x557676ba19b0 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba19b0 -- S  [style=invis];
Node0x557676ba2850 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba2850 -- S  [style=invis];
Node0x555b80a8c140 -- Node0x555b80a898b0  [label="{D_general}", style="dotted"];
Node0x555b80a8c140 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8c140 -- N  [style=invis];
Node0x557676ba1bc0 -- Node0x557676ba1ad0  [label="{DEF_USE}", style="dotted"];
Node0x557676ba1bc0 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba1bc0 -- S  [style=invis];
Node0x557676ba1bf0 -- Node0x557676ba1ad0  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba1bf0 -- Node0x557676ba1e30  [label="{DEF_USE}", style="dotted"];
Node0x557676ba1bf0 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba1bf0 -- S  [style=invis];
Node0x557676ba1a40 -- Node0x557676ba1c20  [label="{DEF_USE}", style="dotted"];
Node0x557676ba1a40 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x555b80a8bf00 -- Node0x555b80a903e0  [label="{D_general}", style="dotted"];
Node0x555b80a8bf00 -- Node0x555b80a90440  [label="{D_general}", style="dotted"];
Node0x555b80a8bf00 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8bf00 -- N  [style=invis];
Node0x557676ba1830 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba1830 -- S  [style=invis];
Node0x555b80a898b0 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a898b0 -- N  [style=invis];
Node0x555b80a8f890 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8f890 -- N  [style=invis];
Node0x555b80a903e0 -- Node0x555b80a8ff50  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x555b80a903e0 -- Node0x555b80a8f8f0  [label="{DEF_USE}", style="dotted"];
Node0x555b80a903e0 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8fef0 -- Node0x555b80a8fdd0  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x555b80a8fef0 -- Node0x555b80a8ff20  [label="{DEF_USE}", style="dotted"];
Node0x555b80a8fef0 -- Node0x555b80a8ff50  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x555b80a8fef0 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8fef0 -- Node0x555b80a9d240  [label="{GLOBAL_DEP}", style="dotted"];
Node0x555b80a8fef0 -- N  [style=invis];
Node0x557676ba21c0 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba21c0 -- S  [style=invis];
Node0x557676babef0 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676babef0 -- S  [style=invis];
Node0x555b80a819c0 -- Node0x555b80a93200  [label="{DEF_USE}", style="dotted"];
Node0x555b80a819c0 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a819c0 -- N  [style=invis];
Node0x555b80a8fd40 -- Node0x555b80a8fda0  [label="{DEF_USE}", style="dotted"];
Node0x555b80a8fd40 -- Node0x555b80a8fe00  [label="{DEF_USE}", style="dotted"];
Node0x555b80a8fd40 -- Node0x555b80a901a0  [label="{D_general}", style="dotted"];
Node0x555b80a8fd40 -- Node0x555b80a90410  [label="{D_general}", style="dotted"];
Node0x555b80a8fd40 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8fd40 -- N  [style=invis];
Node0x555b80a90560 -- Node0x555b80a901a0  [label="{DEF_USE}", style="dotted"];
Node0x555b80a90560 -- Node0x555b80a90410  [label="{DEF_USE}", style="dotted"];
Node0x555b80a90560 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a90560 -- N  [style=invis];
Node0x555b80a8f8f0 -- Node0x555b80a93200  [label="{DEF_USE}", style="dotted"];
Node0x555b80a8f8f0 -- Node0x555b80a8fb60  [label="{DEF_USE}", style="dotted"];
Node0x555b80a8f8f0 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8fda0 -- Node0x555b80a901a0  [label="{DATA_READ}", style="dotted"];
Node0x555b80a8fda0 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8fda0 -- N  [style=invis];
Node0x557676babe90 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676babe90 -- S  [style=invis];
Node0x555b80a8fdd0 -- Node0x555b80a8ff50  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x555b80a8fdd0 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8fdd0 -- N  [style=invis];
Node0x557676ba22e0 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba22e0 -- S  [style=invis];
Node0x555b80a8fd10 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x557676ba26d0 -- Node0x557676ba1f80  [label="{DEF_USE}", style="dotted"];
Node0x557676ba26d0 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba26d0 -- S  [style=invis];
Node0x555b80a9d240 -- Node0x555b80a8c170  [label="{SCOPE}"];
Node0x555b80a9d240 -- Node0x555b80a8ff50  [label="{GLOBAL_DEP}", style="dotted"];
Node0x555b80a9d240 -- N  [style=invis];
Node0x555b80a8ff50 -- Node0x555b80a901a0  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x555b80a8ff50 -- Node0x555b80a90410  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x555b80a8ff50 -- Node0x555b80a90440  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x555b80a8ff50 -- Node0x555b80a8c170  [label="{CONTROL}"];
Node0x555b80a8ff50 -- N  [style=invis];
Node0x557676ba1aa0 -- Node0x557676ba1dd0  [label="{DEF_USE}", style="dotted"];
Node0x557676ba1aa0 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba1aa0 -- S  [style=invis];
Node0x557676ba1ec0 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba1ec0 -- S  [style=invis];
Node0x557676ba1e30 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba1e30 -- S  [style=invis];
Node0x557676ba1ad0 -- Node0x557676ba1c20  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba1ad0 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba1ad0 -- S  [style=invis];
Node0x557676ba1dd0 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba1dd0 -- S  [style=invis];
Node0x555b80a8c170 -- Node0x555b80a93200  [label="{CONTROL}"];
Node0x555b80a8c170 -- Node0x555b80a8fad0  [label="{CONTROL}"];
Node0x555b80a8c170 -- Node0x555b80a8fcb0  [label="{CONTROL}"];
Node0x555b80a8c170 -- Node0x555b80a8ff20  [label="{CONTROL}"];
Node0x555b80a8c170 -- Node0x555b80a901a0  [label="{CONTROL}"];
Node0x555b80a8c170 -- Node0x555b80a8fe00  [label="{CONTROL}"];
Node0x555b80a8c170 -- Node0x555b80a90410  [label="{CONTROL}"];
Node0x555b80a8c170 -- Node0x555b80a8c1a0  [label="{CONTROL}"];
Node0x555b80a8c170 -- Node0x555b80a8fb60  [label="{CONTROL}"];
Node0x555b80a8c170 -- Node0x555b80a90440  [label="{CONTROL}"];
Node0x555b80a8fb60 -- Node0x555b80a8fad0  [color="red", label="{D_ALIAS}", penwidth="2.0", style="dotted"];
Node0x557676ba19e0 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba19e0 -- S  [style=invis];
Node0x555b80a8ff20 -- N  [style=invis];
Node0x557676ba2340 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba2340 -- S  [style=invis];
Node0x557676ba1f80 -- Node0x557676ba2820  [label="{CONTROL}"];
Node0x557676ba1f80 -- S  [style=invis];
Node0x557676bcb520 -- Node0x557676ba2820  [label="{SCOPE}"];
Node0x557676bcb520 -- S  [style=invis];
Node0x555b80a8fad0 -- N  [style=invis];
Node0x555b80a8c1a0 -- N  [style=invis];
Node0x555b80a90410 -- Node0x555b80a8fe00  [label="{DATA_READ}", style="dotted"];
Node0x555b80a90410 -- N  [style=invis];
Node0x557676ba2820 -- Node0x557676ba25e0  [label="{CONTROL}"];
Node0x557676ba2820 -- Node0x557676ba1c20  [label="{CONTROL}"];
Node0x557676ba25e0 -- S  [style=invis];
Node0x555b80a8fe00 -- N  [style=invis];
Node0x555b80a901a0 -- N  [style=invis];
Node0x555b80a8fcb0 -- N  [style=invis];
}
